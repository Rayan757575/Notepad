/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bloco.de.notas;

import java.awt.Font;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author 17500059647
 */
public class BlocoNotas extends javax.swing.JFrame {

    Integer qtdLetras;
    String fonte = "Arial";

    /**
     * Creates new form BlocoNotas
     */
    public BlocoNotas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnNovo = new javax.swing.JButton();
        btnFontes = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnTipoFontes = new javax.swing.JComboBox<>();
        txtTamanhoFonte = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        Contador = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtTexto = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuArquivo = new javax.swing.JMenu();
        menuNovo = new javax.swing.JMenuItem();
        menuSair = new javax.swing.JMenuItem();
        menuSalvar = new javax.swing.JMenuItem();
        menuAbrir = new javax.swing.JMenuItem();
        menuEditar = new javax.swing.JMenu();
        menuMaiuscula = new javax.swing.JMenuItem();
        menuMinuscula = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        subMenuSobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(538, 492));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnFontes.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        btnFontes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Arial", "Tahoma", "Calibri", "Times New Roman" }));
        btnFontes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnFontesItemStateChanged(evt);
            }
        });
        btnFontes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFontesActionPerformed(evt);
            }
        });
        btnFontes.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                btnFontesPropertyChange(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Tamanho da fonte");
        jLabel1.setMaximumSize(new java.awt.Dimension(90, 14));
        jLabel1.setPreferredSize(new java.awt.Dimension(90, 14));

        btnTipoFontes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PLAIN", "BOLD", "ITALIC" }));
        btnTipoFontes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnTipoFontesItemStateChanged(evt);
            }
        });

        txtTamanhoFonte.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTamanhoFonteFocusLost(evt);
            }
        });
        txtTamanhoFonte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTamanhoFonteActionPerformed(evt);
            }
        });
        txtTamanhoFonte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTamanhoFonteKeyPressed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icone.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovo)
                .addGap(18, 18, 18)
                .addComponent(btnFontes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTipoFontes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSalvar)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtTamanhoFonte, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo)
                    .addComponent(btnFontes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTipoFontes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTamanhoFonte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvar))
                .addContainerGap())
        );

        Contador.setText("Contador");

        txtTexto.setColumns(20);
        txtTexto.setRows(5);
        txtTexto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTextoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTextoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTextoKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtTexto);

        jMenuBar1.setPreferredSize(new java.awt.Dimension(129, 35));

        menuArquivo.setText("Arquivo");

        menuNovo.setText("Novo");
        menuNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNovoActionPerformed(evt);
            }
        });
        menuArquivo.add(menuNovo);

        menuSair.setText("Sair");
        menuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSairActionPerformed(evt);
            }
        });
        menuArquivo.add(menuSair);

        menuSalvar.setText("Salvar");
        menuSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalvarActionPerformed(evt);
            }
        });
        menuArquivo.add(menuSalvar);

        menuAbrir.setText("Abrir");
        menuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAbrirActionPerformed(evt);
            }
        });
        menuArquivo.add(menuAbrir);

        jMenuBar1.add(menuArquivo);

        menuEditar.setText("Editar");

        menuMaiuscula.setText("maiuscula");
        menuMaiuscula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuMaiusculaActionPerformed(evt);
            }
        });
        menuEditar.add(menuMaiuscula);

        menuMinuscula.setText("minuscula");
        menuMinuscula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuMinusculaActionPerformed(evt);
            }
        });
        menuEditar.add(menuMinuscula);

        jMenuBar1.add(menuEditar);

        jMenu1.setText("Sobre");

        subMenuSobre.setText("sobre");
        jMenu1.add(subMenuSobre);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(532, Short.MAX_VALUE)
                        .addComponent(Contador))
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Contador)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        novaTela();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void menuNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNovoActionPerformed
        novaTela();
    }//GEN-LAST:event_menuNovoActionPerformed

    private void menuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSairActionPerformed
        fecharTela();
    }//GEN-LAST:event_menuSairActionPerformed

    private void menuMaiusculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuMaiusculaActionPerformed
        txtTexto.setText(txtTexto.getText().toUpperCase());
    }//GEN-LAST:event_menuMaiusculaActionPerformed

    private void menuMinusculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuMinusculaActionPerformed
        txtTexto.setText(txtTexto.getText().toLowerCase());
    }//GEN-LAST:event_menuMinusculaActionPerformed
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        txtTamanhoFonte.setText("12");
    }//GEN-LAST:event_formWindowOpened

    private void btnFontesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnFontesItemStateChanged
        //identificador de mudança de fonte
        if (btnFontes.getSelectedItem().equals("Tahoma")) {
            fonte = "Tahoma";
        } else if (btnFontes.getSelectedItem().equals("Arial")) {
            fonte = "Arial";
        } else if (btnFontes.getSelectedItem().equals("Calibri")) {
            fonte = "Calibri";
        } else {
            fonte = "Times New Roman";
        }
        alteracaoTexto();
    }//GEN-LAST:event_btnFontesItemStateChanged
    
    private void txtTamanhoFonteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTamanhoFonteFocusLost
        alteracaoTexto();
    }//GEN-LAST:event_txtTamanhoFonteFocusLost

    private void btnTipoFontesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnTipoFontesItemStateChanged
        alteracaoTexto();
    }//GEN-LAST:event_btnTipoFontesItemStateChanged

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        salvar();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void menuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAbrirActionPerformed
        abrir();
    }//GEN-LAST:event_menuAbrirActionPerformed

    private void menuSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalvarActionPerformed
        salvar();
    }//GEN-LAST:event_menuSalvarActionPerformed

    private void txtTextoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTextoKeyReleased
        //recebe a quantidade de caracteres da caixa de texto e exibe no lugar da variavel contador
        qtdLetras = txtTexto.getText().length();
        Contador.setText(Integer.toString(qtdLetras));
    }//GEN-LAST:event_txtTextoKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BlocoNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BlocoNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BlocoNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BlocoNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BlocoNotas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Contador;
    private javax.swing.JComboBox<String> btnFontes;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> btnTipoFontes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menuAbrir;
    private javax.swing.JMenu menuArquivo;
    private javax.swing.JMenu menuEditar;
    private javax.swing.JMenuItem menuMaiuscula;
    private javax.swing.JMenuItem menuMinuscula;
    private javax.swing.JMenuItem menuNovo;
    private javax.swing.JMenuItem menuSair;
    private javax.swing.JMenuItem menuSalvar;
    private javax.swing.JMenuItem subMenuSobre;
    private javax.swing.JTextField txtTamanhoFonte;
    private javax.swing.JTextArea txtTexto;
    // End of variables declaration//GEN-END:variables

    //fecha a tela
    public void fecharTela() {
        this.dispose();
    }

    //abre uma nova tela/arquivo
    public void novaTela() {
        fecharTela();
        BlocoNotas nova = new BlocoNotas();
        nova.setVisible(true);
    }

    //mudança de fonte/tamanho e tipo
    public void alteracaoTexto() {
        if (btnTipoFontes.getSelectedItem().equals("PLAIN")) {
            txtTexto.setFont(new Font(fonte, Font.PLAIN, Integer.parseInt(txtTamanhoFonte.getText())));
        } else if (btnTipoFontes.getSelectedItem().equals("BOLD")) {
            txtTexto.setFont(new Font(fonte, Font.BOLD, Integer.parseInt(txtTamanhoFonte.getText())));
        } else {
            txtTexto.setFont(new Font(fonte, Font.ITALIC, Integer.parseInt(txtTamanhoFonte.getText())));
        }
    }

    //recebe a quantidade de caracteres da caixa de texto e exibe no lugar da variavel contador
    public void contador() {
        qtdLetras = txtTexto.getText().length();
        Contador.setText(Integer.toString(qtdLetras));
    }

    //salva arquivo
    public void salvar() {
        JFileChooser j = new JFileChooser();
        int resposta = j.showSaveDialog(this);
        if (resposta == JFileChooser.APPROVE_OPTION) {
            File arquivo = j.getSelectedFile();
            System.out.println(arquivo.getPath());

            try {
                OutputStream os = new FileOutputStream(arquivo);
                OutputStreamWriter writer = new OutputStreamWriter(os);
                BufferedWriter buffer = new BufferedWriter(writer);

                buffer.write(txtTexto.getText());

                buffer.close();
                writer.close();
                os.close();

            } catch (FileNotFoundException ex) {
                Logger.getLogger(BlocoNotas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(BlocoNotas.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }

    //abre arquivo
    public void abrir() {
        //cria uma variável do tipo de janela de escolha de arquivos
        JFileChooser janela = new JFileChooser();
        //chamar a janela e pegar o retorno
        int resposta = janela.showOpenDialog(janela);
        //verifica se a resposta foi clicar no botão abrir
        if (resposta == JFileChooser.APPROVE_OPTION) {
            //File representa o arquivo
            File arquivo = janela.getSelectedFile();
            //imprime o caminho do arquivo selecionado
            System.out.println(arquivo.getPath());
            try {
                //Entrada no programa
                InputStream is = new FileInputStream(arquivo);
                InputStreamReader reader = new InputStreamReader(is);
                BufferedReader buffer = new BufferedReader(reader);

                String linha = buffer.readLine();//ler a primeira linha

                while (linha != null) {
                    txtTexto.setText("");
                    txtTexto.setText(txtTexto.getText() + linha);
                    linha = buffer.readLine();
                    contador();
                }

                txtTexto.setText(txtTexto.getText());

                buffer.close();
                reader.close();
                is.close();

            } catch (FileNotFoundException ex) {
                Logger.getLogger(BlocoNotas.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(BlocoNotas.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }
}
